<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN# the language of your site, default as "en""><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh-CN# the language of your site, default as "en"" /><updated>2020-03-14T16:17:20+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ReFantasy</title><author><name>Tan Dongliang</name><email>2016100532@mails.cust.edu.cn</email></author><entry><title type="html">朴素贝叶斯分类</title><link href="http://localhost:4000/2020/03/14/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB.html" rel="alternate" type="text/html" title="朴素贝叶斯分类" /><published>2020-03-14T00:00:00+08:00</published><updated>2020-03-14T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/14/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB</id><content type="html" xml:base="http://localhost:4000/2020/03/14/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://refantasy.cn/2020/03/04/随机事件与概率.html&quot;&gt;贝叶斯公式参见&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;本文内容和公式主要参考 李航《统计学习方法》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;基本思想&quot;&gt;基本思想&lt;/h2&gt;

&lt;p&gt;设$X$为随机向量，即数据的特征向量，$Y$为输出空间的随机变量，即分类结果。$P(X,Y)$是$X$和$Y$的联合概率分布，并通过此概率分布生成训练数据集。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;T=\{(x_1,y_1),(x_2,y_2),...,(x_N,y_N)\}&lt;/script&gt;

&lt;p&gt;其中，先验概率分布为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation}
P(Y=c_k),\quad k=1,2,...,K
\end{equation}&lt;/script&gt;

&lt;p&gt;条件概率分布为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},X^{(2)}=x^{(2)},...,X^{(n)}=x^{(n)}|Y=c_k),k=1,2,...,K&lt;/script&gt;

&lt;p&gt;由贝叶斯公式可知&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
P(Y=c_k|X = x)&amp;=\frac{P((X=x)·(Y=c_k))}{P(X=x)}\\
              &amp;=\frac{P(X=x|Y=c_k)P(Y=c_k)}{\sum_kP(X=x|Y=c_k)P(Y=c_k)}
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;其中，$K$为样本类别数目。在式$(4)$中，$x$表示任意样本实例，$c_k$表示随机变量$Y$取到的值。$P(Y=c_k|X = x)$表示输入样本$x$，输出分类标签$Y=c_k$的概率。在进行分类时，取$y=f(x)=\mathop{\arg\max}_{c_k} P(Y=c_k|X=x)$即为我们所要预测的分类结果。&lt;/p&gt;

&lt;p&gt;注意到，在式$(4)$中，对于$\forall c_k$，分母的值都是一样的。所以&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;y=\mathop{\arg\max}_{c_k}P(X=x|Y=c_k)P(Y=c_k)&lt;/script&gt;

&lt;p&gt;$y$ 即为所要预测的$x$的分类结果。&lt;/p&gt;

&lt;h2 id=&quot;参数估计&quot;&gt;参数估计&lt;/h2&gt;

&lt;p&gt;在朴素贝叶斯法中，学习意味着估计$P({Y=c_k})$和$P({X = x}|{Y=c_k})$。先验概率$P(Y=c_k)$的极大似然估计为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Y=c_k)=\frac{\sum_{i=1}^NI(y_i=c_k)}{N},k=1,2,...,K&lt;/script&gt;

&lt;p&gt;其中，$N$为样本个数，$I$为指示函数。&lt;/p&gt;

&lt;p&gt;条件概率分布$P(X=x|Y=c_k)$有指数级参数，其估计实际是不可行的。事实上，假设$x^{(j)}$为随机变量$X$第$j$维的值，设其可取值有$S_j$个，$j=1,2,…,n$，$Y$的可取值有$K$个，那么条件概率分布的参数个数为$K\prod_{j=1}^nS_j$。朴素贝叶斯法对条件概率分布做了条件独立的假设，这也是“朴素”的得名由来。具体地，条件独立性假设是&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
P(X=x|Y=c_k)&amp;=P(X^{(1)}=x^{(1)},...,X^{(n)}=x^{(n)}|Y=c_k)\\
            &amp;=\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;其中，&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P(X^{(j)}=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)}{\sum_{i=1}^NI(y_i=c_k)}&lt;/script&gt;

&lt;p&gt;$l=1,2,…,S_j$，$a_{jl}$是第$j$个特征可能取得第$l$个值。&lt;/p&gt;

&lt;p&gt;由式$(5)(6)(7)(8)$即可求出随机变量$X=x$时的分类结果。&lt;/p&gt;

&lt;h2 id=&quot;学习与分类算法&quot;&gt;学习与分类算法&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;算法 朴素贝叶斯算法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;输入：训练数据$T$，待预测实例$x$&lt;/p&gt;

&lt;p&gt;输出：实例$x$的分类&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;计算先验概率以及条件概率&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Y=c_k)，P(X^{(j)}=a_{jl}|Y=c_k)\nonumber&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于给定实例$x=(x^{(1)},x^{(2)},…,x^{(n)})^T$，计算&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k),k=1,2,...,K\nonumber&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确定实例$x$的分类&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;y=\mathop{\arg\max}_{c_k}P(Y=c_k)\prod_{j=1}^nP(X^{(j)}=x^{(j)}|Y=c_k)\nonumber&lt;/script&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;贝叶斯估计&quot;&gt;贝叶斯估计&lt;/h2&gt;

&lt;p&gt;极大似然法估计可能会出现所要估计的概率为0的情况。这会影响到后验概率的计算结果，使分类产生偏差。解决这一问题是使用贝叶斯估计。具体地，条件概率的贝叶斯估计是&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P(X^{(j)}=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^NI(x_i^{(j)}=a_{jl},y_i=c_k)+\lambda}{\sum_{i=1}^NI(y_i=c_k)+S_j\lambda},\quad\lambda\geq 0&lt;/script&gt;

&lt;p&gt;同样地，先验概率的贝叶斯估计是&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Y=c_k)=\frac{\sum_{i=1}^NI(y_i=c_k)+\lambda}{N+K\lambda}&lt;/script&gt;

&lt;h2 id=&quot;代码实现&quot;&gt;代码实现&lt;/h2&gt;

&lt;p&gt;首先定义一个通用数据集类&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*
 *
 * 
 *    通用数据集类
 * 
 *    模板参数 D 为样本数据部分的数据类型
 *    模板参数 L 为样本标签部分的数据类型
 *    一个样布数据和一个样本标签组成一条记录
 *    默认使用 vector 容器保存数据记录
 * 
 *    License: MIT
 * 
 *    ©TDL 2020.03.13
 *    Contact:refantasy.cn
 * 
 */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;utility&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataSet&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;DataSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* *\brief 插入一个样本
     *  \param d 样本特征向量
     *  \param la 样本标签值
     */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;la&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;la&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* *\brief 查找一个样本
     *  \param n 样本索引
     *  \return 一条记录引用
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 数据集大小&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 样本集合&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;贝叶斯分类器&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*
 *
 *    朴素贝叶斯分类器 李航《统计学习方法》代码实现
 *
 *    该类仅用于研究贝叶斯分类算法，样本特征的不同特征默认采用同种数据类型（整型）表示
 *    样本类别标签必须是从零开始的连续整数
 *
 *    License: MIT
 * 
 *    ©TDL 2020.03.13
 *    Contact:refantasy.cn
 * 
 */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;vector&amp;gt;
#include &amp;lt;array&amp;gt;
#include &quot;dataset.hpp&quot;
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*
 * *\brief 贝叶斯分类器
 *  \param dims 样本特征的维度
 *  \param ClassesN 分类的类别:0,1,2,...,ClassesN-1
 *  \param MaxFeaValue 特征值得最大取值
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FEATURE_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bayes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Example_4_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* *\param d 数据集，由若干条记录组成，每条记录由特征向量和标签组成
     *  \param lambd 贝叶斯估计参数，默认为0，通常取1
     *  \param Sj Sj[i]表示第i维特征可能取到的值得个数
     */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FEATURE_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Sj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;MaxK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 训练&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ComputePrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ComputeConditionPrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 预测&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FEATURE_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_prior_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;prob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_condition_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//std::cout&amp;lt;&amp;lt;prob&amp;lt;&amp;lt;std::endl;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;max_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 计算先验概率&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputePrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_prior_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 计算条件概率&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputeConditionPrior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_x_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_c_k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;y_c_k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;p_x_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;_condition_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_x_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_c_k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Sj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 数据集&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DataSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FEATURE_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 先验概率&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_prior_probability&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 条件概率&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClassesN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_condition_probability&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_lambda&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 特征值可取值得个数&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Sj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 样本标签可取到的值的个数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;《统计学习方法》例4-2&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Example_4_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 创建数据集&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 标签重新映射到连续整形 y = -1 -&amp;gt; 0,  y = 1 -&amp;gt; 1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DataSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 创建分类器并传入数据集&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 训练&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 输出先验概率&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;先验概率&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_prior_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;P(Y=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;)=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 输出条件概率&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;条件概率(SML分别用123替换)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_condition_probability&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[](&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;S&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;M&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;L&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[](&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prior&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaxFeaValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;P(X&quot;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;^&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|Y=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;P(X&quot;&lt;/span&gt;
                              &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;^&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;|Y=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 预测&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;预测&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;P(x=(2,S)) = &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Tan Dongliang</name><email>2016100532@mails.cust.edu.cn</email></author><category term="统计学习方法" /><summary type="html">贝叶斯公式参见 本文内容和公式主要参考 李航《统计学习方法》 基本思想 设$X$为随机向量，即数据的特征向量，$Y$为输出空间的随机变量，即分类结果。$P(X,Y)$是$X$和$Y$的联合概率分布，并通过此概率分布生成训练数据集。 其中，先验概率分布为 条件概率分布为 由贝叶斯公式可知 其中，$K$为样本类别数目。在式$(4)$中，$x$表示任意样本实例，$c_k$表示随机变量$Y$取到的值。$P(Y=c_k|X = x)$表示输入样本$x$，输出分类标签$Y=c_k$的概率。在进行分类时，取$y=f(x)=\mathop{\arg\max}_{c_k} P(Y=c_k|X=x)$即为我们所要预测的分类结果。 注意到，在式$(4)$中，对于$\forall c_k$，分母的值都是一样的。所以 $y$ 即为所要预测的$x$的分类结果。 参数估计 在朴素贝叶斯法中，学习意味着估计$P({Y=c_k})$和$P({X = x}|{Y=c_k})$。先验概率$P(Y=c_k)$的极大似然估计为 其中，$N$为样本个数，$I$为指示函数。 条件概率分布$P(X=x|Y=c_k)$有指数级参数，其估计实际是不可行的。事实上，假设$x^{(j)}$为随机变量$X$第$j$维的值，设其可取值有$S_j$个，$j=1,2,…,n$，$Y$的可取值有$K$个，那么条件概率分布的参数个数为$K\prod_{j=1}^nS_j$。朴素贝叶斯法对条件概率分布做了条件独立的假设，这也是“朴素”的得名由来。具体地，条件独立性假设是 其中， $l=1,2,…,S_j$，$a_{jl}$是第$j$个特征可能取得第$l$个值。 由式$(5)(6)(7)(8)$即可求出随机变量$X=x$时的分类结果。 学习与分类算法 算法 朴素贝叶斯算法 输入：训练数据$T$，待预测实例$x$ 输出：实例$x$的分类 计算先验概率以及条件概率 对于给定实例$x=(x^{(1)},x^{(2)},…,x^{(n)})^T$，计算 确定实例$x$的分类 贝叶斯估计 极大似然法估计可能会出现所要估计的概率为0的情况。这会影响到后验概率的计算结果，使分类产生偏差。解决这一问题是使用贝叶斯估计。具体地，条件概率的贝叶斯估计是 同样地，先验概率的贝叶斯估计是 代码实现 首先定义一个通用数据集类 /* * * * 通用数据集类 * * 模板参数 D 为样本数据部分的数据类型 * 模板参数 L 为样本标签部分的数据类型 * 一个样布数据和一个样本标签组成一条记录 * 默认使用 vector 容器保存数据记录 * * License: MIT * * ©TDL 2020.03.13 * Contact:refantasy.cn * */ #include &amp;lt;utility&amp;gt; #include &amp;lt;vector&amp;gt; template &amp;lt;typename D, typename L&amp;gt; class DataSet { public: using value_type = D; using label_type = L; using record_type = std::pair&amp;lt;D, L&amp;gt;; DataSet() = default; /* *\brief 插入一个样本 * \param d 样本特征向量 * \param la 样本标签值 */ void Insert(const value_type &amp;amp;d, const label_type &amp;amp;la) { data.push_back({d, la}); } /* *\brief 查找一个样本 * \param n 样本索引 * \return 一条记录引用 */ const record_type&amp;amp; GetRecord(size_t n) const { return data[n]; } // 数据集大小 size_t size() const { return data.size(); } private: // 样本集合 std::vector&amp;lt;record_type&amp;gt; data; }; 贝叶斯分类器 /* * * 朴素贝叶斯分类器 李航《统计学习方法》代码实现 * * 该类仅用于研究贝叶斯分类算法，样本特征的不同特征默认采用同种数据类型（整型）表示 * 样本类别标签必须是从零开始的连续整数 * * License: MIT * * ©TDL 2020.03.13 * Contact:refantasy.cn * */ #include &amp;lt;vector&amp;gt; #include &amp;lt;array&amp;gt; #include &quot;dataset.hpp&quot; /* * *\brief 贝叶斯分类器 * \param dims 样本特征的维度 * \param ClassesN 分类的类别:0,1,2,...,ClassesN-1 * \param MaxFeaValue 特征值得最大取值 */ template &amp;lt;int dims, int ClassesN, int MaxFeaValue, typename FEATURE_TYPE = int&amp;gt; class Bayes { friend void Example_4_2(); public: Bayes() = default; /* *\param d 数据集，由若干条记录组成，每条记录由特征向量和标签组成 * \param lambd 贝叶斯估计参数，默认为0，通常取1 * \param Sj Sj[i]表示第i维特征可能取到的值得个数 */ Bayes(const DataSet&amp;lt;std::array&amp;lt;FEATURE_TYPE, dims&amp;gt;, int&amp;gt; &amp;amp;d, double lambda = 0, std::vector&amp;lt;int&amp;gt; Sj = std::vector&amp;lt;int&amp;gt;(dims, MaxFeaValue)) : _dataset(d), _lambda(lambda), _Sj(Sj) { int MaxK = d.GetRecord(0).second; for (int i = 0; i &amp;lt; d.size(); i++) { if (d.GetRecord(i).second &amp;gt; MaxK) MaxK = d.GetRecord(i).second; } K = MaxK; } // 训练 void Train() { ComputePrior(); ComputeConditionPrior(); } // 预测 int Pred(const std::array&amp;lt;FEATURE_TYPE, dims&amp;gt; &amp;amp;x) { double result[ClassesN] = {0}; for (int k = 0; k &amp;lt; ClassesN; k++) { double prob = _prior_probability[k]; for (int j = 0; j &amp;lt; dims; j++) { prob *= _condition_probability[k][j][x[j]]; } result[k] = prob; //std::cout&amp;lt;&amp;lt;prob&amp;lt;&amp;lt;std::endl; } int max_index = 0; for (int k = 0; k &amp;lt; ClassesN; k++) { if (result[k] &amp;gt; result[max_index]) max_index = k; } return max_index; } private: // 计算先验概率 void ComputePrior() { for (int k = 0; k &amp;lt; ClassesN; k++) { int I = 0; for (int i = 0; i &amp;lt; _dataset.size(); i++) { if (_dataset.GetRecord(i).second == k) I++; } _prior_probability[k] = ((double)I + _lambda) / (_dataset.size() + (K + 1) * _lambda); } } // 计算条件概率 void ComputeConditionPrior() { for (int k = 0; k &amp;lt; ClassesN; k++) { for (int j = 0; j &amp;lt; dims; j++) { for (int L = 0; L &amp;lt;= MaxFeaValue; L++) { int p_x_y = 0; int y_c_k = 0; for (int i = 0; i &amp;lt; _dataset.size(); i++) { if (_dataset.GetRecord(i).second == k) { y_c_k++; if (_dataset.GetRecord(i).first[j] == L) p_x_y++; } } _condition_probability[k][j][L] = ((double)p_x_y + _lambda) / (y_c_k + _Sj[j] * _lambda); } } } } private: // 数据集 DataSet&amp;lt;std::array&amp;lt;FEATURE_TYPE, dims&amp;gt;, int&amp;gt; _dataset; // 先验概率 std::array&amp;lt;double, ClassesN&amp;gt; _prior_probability = {0}; // 条件概率 std::array&amp;lt;std::array&amp;lt;std::array&amp;lt;double, MaxFeaValue + 1&amp;gt;, dims&amp;gt;, ClassesN&amp;gt; _condition_probability = {0}; double _lambda = 0; // 特征值可取值得个数 std::vector&amp;lt;int&amp;gt; _Sj = std::vector&amp;lt;int&amp;gt;(dims, MaxFeaValue); // 样本标签可取到的值的个数 int K = 0; }; 《统计学习方法》例4-2 void Example_4_2() { constexpr int S = 1; constexpr int M = 2; constexpr int L = 3; // 创建数据集 constexpr int dims = 2; constexpr int MaxFeaValue = 3; constexpr int classes = 2; // 标签重新映射到连续整形 y = -1 -&amp;gt; 0, y = 1 -&amp;gt; 1 DataSet&amp;lt;std::array&amp;lt;int, dims&amp;gt;, int&amp;gt; d; d.Insert({1, S}, 0); d.Insert({1, M}, 0); d.Insert({1, M}, 1); d.Insert({1, S}, 1); d.Insert({1, S}, 0); d.Insert({2, S}, 0); d.Insert({2, M}, 0); d.Insert({2, M}, 1); d.Insert({2, L}, 1); d.Insert({2, L}, 1); d.Insert({3, L}, 1); d.Insert({3, M}, 1); d.Insert({3, M}, 1); d.Insert({3, L}, 1); d.Insert({3, L}, 0); // 创建分类器并传入数据集 Bayes&amp;lt;dims, classes, MaxFeaValue&amp;gt; bayes(d, 1); // 训练 bayes.Train(); // 输出先验概率 std::cout &amp;lt;&amp;lt; &quot;先验概率&quot; &amp;lt;&amp;lt; std::endl; auto &amp;amp;prior = bayes._prior_probability; for (int y = 0; y &amp;lt; prior.size(); y++) { std::cout &amp;lt;&amp;lt; &quot;P(Y=&quot; &amp;lt;&amp;lt; y &amp;lt;&amp;lt; &quot;)=&quot; &amp;lt;&amp;lt; prior[y] &amp;lt;&amp;lt; std::endl; } std::cout &amp;lt;&amp;lt; std::endl; // 输出条件概率 std::cout &amp;lt;&amp;lt; &quot;条件概率(SML分别用123替换)&quot; &amp;lt;&amp;lt; std::endl; auto &amp;amp;condi = bayes._condition_probability; auto f = [](int i) {if(i==1)return &quot;S&quot;;else if(i==2)return &quot;M&quot;;else return &quot;L&quot;; }; auto g = [](int y) {if(y==0)return -1;else return 1; }; for (int y = 0; y &amp;lt; prior.size(); y++) { for (int j = 0; j &amp;lt; dims; j++) { for (int L = 1; L &amp;lt;= MaxFeaValue; L++) { if (j == 1) { std::cout &amp;lt;&amp;lt; &quot;P(X&quot; &amp;lt;&amp;lt; &quot;^&quot; &amp;lt;&amp;lt; j + 1 &amp;lt;&amp;lt; &quot;=&quot; &amp;lt;&amp;lt; f(L) &amp;lt;&amp;lt; &quot;|Y=&quot; &amp;lt;&amp;lt; g(y) &amp;lt;&amp;lt; &quot;) = &quot; &amp;lt;&amp;lt; condi[y][j][L] &amp;lt;&amp;lt; std::endl; } else { std::cout &amp;lt;&amp;lt; &quot;P(X&quot; &amp;lt;&amp;lt; &quot;^&quot; &amp;lt;&amp;lt; j + 1 &amp;lt;&amp;lt; &quot;=&quot; &amp;lt;&amp;lt; L &amp;lt;&amp;lt; &quot;|Y=&quot; &amp;lt;&amp;lt; g(y) &amp;lt;&amp;lt; &quot;) = &quot; &amp;lt;&amp;lt; condi[y][j][L] &amp;lt;&amp;lt; std::endl; } } } } // 预测 std::cout &amp;lt;&amp;lt; &quot;预测&quot; &amp;lt;&amp;lt; std::endl; std::array&amp;lt;int, 2&amp;gt; x{2, S}; int Y = bayes.Pred(x); std::cout &amp;lt;&amp;lt; &quot;P(x=(2,S)) = &quot;; std::cout &amp;lt;&amp;lt; g(Y) &amp;lt;&amp;lt; std::endl; }</summary></entry><entry><title type="html">二维随机变量及其分布</title><link href="http://localhost:4000/2020/03/08/%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83.html" rel="alternate" type="text/html" title="二维随机变量及其分布" /><published>2020-03-08T00:00:00+08:00</published><updated>2020-03-08T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/08/%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83</id><content type="html" xml:base="http://localhost:4000/2020/03/08/%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83.html">&lt;h2 id=&quot;二维随机变量的概念及其分布&quot;&gt;二维随机变量的概念及其分布&lt;/h2&gt;

&lt;p&gt;设$\Omega={\omega}$是随机试验$T$的样本空间，$X$和$Y$是定义在$\Omega$上的两个随机变量，由$X$和$Y$构成的一个向量，$(X,Y)$叫做二维随机向量或二维随机变量。对于任意实数$x$和$y$，二元函数&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
F(x,y)&amp;=P\{X\leq x \cap Y\leq y\} \\
      &amp;=P\{X\leq x , Y\leq y\} 
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;称为二维随机变量$(X,Y)$的分布函数或联合分布函数。对于任意$n$个实数$x_1,x_2,…,x_n$的$n$元函数$F(x_1,x_2,…,x_n)=P{X_1\leq x_1,X_2\leq x_2,…,X_n\leq x_n}$叫做$n$维随机向量或$n$维随机变量。&lt;/p&gt;

&lt;p&gt;如果存在非负函数$f(x,y)$，使得对于任意的实数$x$，$y$，均有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F(x,y)=\int_{-\infty}^{y}\int_{-\infty}^{x}f(u,v)d_u d_v&lt;/script&gt;

&lt;p&gt;则称$(X,Y)$为二维连续型随机变量，$f(x,y)$为概率密度函数或联合概率密度函数。&lt;/p&gt;

&lt;h2 id=&quot;边缘分布&quot;&gt;边缘分布&lt;/h2&gt;

&lt;p&gt;二维随机变量的分布函数$F(x,y)$既包含了$X$和$Y$的一切信息，又包含了$X$和$Y$之间关系的一切信息。我们称其分量$X$和$Y$的分布函数为二维随机变量$(X,Y)$关于$X$和$Y$的边缘分布函数，分别记作$F_X(x)$和$F_Y(y)$，边缘分布函数可以由$(X,Y)$的联合分布函数$F(x,y)$来确定&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation}
F_X(x)=\lim\limits_{y \to +\infty}F(x,y)=F(x,+\infty)
\\F_Y(y)=\lim\limits_{x \to +\infty}F(x,y)=F(+\infty,y)
\end{equation}&lt;/script&gt;

&lt;p&gt;则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
F_X(x)&amp;=\lim\limits_{y \to +\infty}F(x,y)\\
      &amp;=\int_{-\infty}^{+\infty}\int_{-\infty}^{x}f(x,y)d_u d_v\\
      &amp;=\int_{-\infty}^{x}\int_{-\infty}^{+\infty}f(x,y)d_v d_u
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;由此可知，$X$，$Y$的边缘概率密度函数为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f_X(x)=F_X^{'}(x)=\int_{-\infty}^{+\infty}f(x,y)d_y\\
f_Y(y)=F_Y^{'}(y)=\int_{-\infty}^{+\infty}f(x,y)d_x&lt;/script&gt;

&lt;h2 id=&quot;条件分布&quot;&gt;条件分布&lt;/h2&gt;

&lt;p&gt;给定$X=x$的条件下，随机变量$Y$的条件分布函数和条件概率密度为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
F_{Y|X}(y|x)&amp;=\int_{-\infty}^{y}\frac{f(x,v)}{f_X(x)}d_v\\
f_{Y|X}(y|x)&amp;=\frac{f(x,y)}{f_Y(y)}
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;证明略。&lt;/p&gt;

&lt;h2 id=&quot;相互独立性&quot;&gt;相互独立性&lt;/h2&gt;

&lt;p&gt;若随机变量$X$和$Y$相互独立，则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
F(x,y)&amp;=F_X(x)F_Y(y)\\
f(x,y)&amp;=f_X(x)f_Y(y)
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;成立。&lt;/p&gt;

&lt;p&gt;进一步推广可得，随机变量$X$和$Y$相互独立的充分必要条件为
&lt;script type=&quot;math/tex&quot;&gt;f(x,y)=h(x)g(y)&lt;/script&gt;
.其中，$h(x)、g(y)$分别为$x、y$的函数。&lt;/p&gt;</content><author><name>Tan Dongliang</name><email>2016100532@mails.cust.edu.cn</email></author><category term="概率论与数理统计" /><summary type="html">二维随机变量的概念及其分布 设$\Omega={\omega}$是随机试验$T$的样本空间，$X$和$Y$是定义在$\Omega$上的两个随机变量，由$X$和$Y$构成的一个向量，$(X,Y)$叫做二维随机向量或二维随机变量。对于任意实数$x$和$y$，二元函数 称为二维随机变量$(X,Y)$的分布函数或联合分布函数。对于任意$n$个实数$x_1,x_2,…,x_n$的$n$元函数$F(x_1,x_2,…,x_n)=P{X_1\leq x_1,X_2\leq x_2,…,X_n\leq x_n}$叫做$n$维随机向量或$n$维随机变量。 如果存在非负函数$f(x,y)$，使得对于任意的实数$x$，$y$，均有 则称$(X,Y)$为二维连续型随机变量，$f(x,y)$为概率密度函数或联合概率密度函数。 边缘分布 二维随机变量的分布函数$F(x,y)$既包含了$X$和$Y$的一切信息，又包含了$X$和$Y$之间关系的一切信息。我们称其分量$X$和$Y$的分布函数为二维随机变量$(X,Y)$关于$X$和$Y$的边缘分布函数，分别记作$F_X(x)$和$F_Y(y)$，边缘分布函数可以由$(X,Y)$的联合分布函数$F(x,y)$来确定 则有 由此可知，$X$，$Y$的边缘概率密度函数为 条件分布 给定$X=x$的条件下，随机变量$Y$的条件分布函数和条件概率密度为 证明略。 相互独立性 若随机变量$X$和$Y$相互独立，则有 成立。 进一步推广可得，随机变量$X$和$Y$相互独立的充分必要条件为 .其中，$h(x)、g(y)$分别为$x、y$的函数。</summary></entry><entry><title type="html">随机变量及其分布</title><link href="http://localhost:4000/2020/03/06/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83.html" rel="alternate" type="text/html" title="随机变量及其分布" /><published>2020-03-06T00:00:00+08:00</published><updated>2020-03-06T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/06/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83</id><content type="html" xml:base="http://localhost:4000/2020/03/06/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%8F%8A%E5%85%B6%E5%88%86%E5%B8%83.html">&lt;h2 id=&quot;随机变量&quot;&gt;随机变量&lt;/h2&gt;

&lt;p&gt;设$\Omega$为某一随机试验的样本空间，如果对于每一个样本点$\omega \in \Omega$，有一个实数$X(\omega)$与之对应，这样就定义了一个$\Omega$上的&lt;strong&gt;实值函数$X=X(\omega)$&lt;/strong&gt;，称之为随机变量，简记为$X$。引入随机变量后，随机事件就可以通过随机变量的取值或取值范围来表示。随机变量可分为两种类型：离散型与非离散型随机变量。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;通俗地讲，随机变量就是一个随机的数，它是对任何的“随机的东西”做的量化。随机的对象可以是任何东西–明天的天气可以是晴、阴、雨，扔硬币的结果可以是正面或者反面，这里本身都没有数字。但是我们要借助概率论来研究它们，而概率论是数学的一部分，要用到数学语言，那么总是写“明天是晴天的概率”就很不方便，于是我们可以把晴、阴、雨贴上标签，叫做0、1、2，然后把明天的天气状况用一个字母X来表示，于是“明天下雨”就变成了“X=2”。这样，这个原本没有数字的随机结果就变成了一个可能的取值为0、1、2的随机数，这就是随机变量。
链接：https://www.zhihu.com/question/307188808/answer/566226225&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;离散型随机变量&quot;&gt;离散型随机变量&lt;/h2&gt;

&lt;p&gt;如果随机变量$X$的所有可能取值只有有限个或可列无穷多个，则称$X$为离散型随机变量。&lt;/p&gt;

&lt;h3 id=&quot;0-1分布&quot;&gt;0-1分布&lt;/h3&gt;

&lt;p&gt;若随机变量$X$的概率分布为&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;$X$&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$P$&lt;/td&gt;
      &lt;td&gt;$1-p$&lt;/td&gt;
      &lt;td&gt;$p$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;其中$0&amp;lt;p&amp;lt;1$，则称$X$服从参数为$p$的$0-1$分布或两点分布，记为$X\sim B(1,p)$。&lt;/p&gt;

&lt;h3 id=&quot;二项分布&quot;&gt;二项分布&lt;/h3&gt;

&lt;p&gt;若随机变量$X$的概率分布为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P\{X=k\}=C_n^kp^k(1-p)^{n-k},\quad k=0,1,2,...,n.&lt;/script&gt;

&lt;p&gt;其中$n$是正整数，$0&amp;lt;p&amp;lt;1$，则称$X$服从参数为$n,p$的二项分布，记为$X\sim B(n,p)$。&lt;/p&gt;

&lt;p&gt;二项分布源于$n$重伯努利试验，若一次试验中事件$A$发生的概率为$p$，则$n$重伯努利试验中，事件$A$发生的次数$X$的概率分布为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P\{ X=k \}=b(k;n,p)=C_n^kp^k(1-p)^{n-k}&lt;/script&gt;

&lt;h3 id=&quot;泊松分布&quot;&gt;泊松分布&lt;/h3&gt;

&lt;p&gt;若随机变量$X$的概率分布为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P\{X=k\}=\frac{\lambda ^k}{k!}e^{-\lambda},\quad k=0,1,2,...&lt;/script&gt;

&lt;p&gt;其中$\lambda &amp;gt;0$，则称$X$服从参数为$\lambda$的泊松分布，记为$X\sim P(\lambda)$。&lt;/p&gt;

&lt;p&gt;可使用泊松分布近似二项分布&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;C_n^kp^k(1-p)^{n-k}\approx \frac{\lambda ^k}{k!}e^{-\lambda},\quad \lambda =np&lt;/script&gt;

&lt;h2 id=&quot;分布函数及其性质&quot;&gt;分布函数及其性质&lt;/h2&gt;

&lt;h3 id=&quot;分布函数的定义&quot;&gt;分布函数的定义&lt;/h3&gt;

&lt;p&gt;设$X$是一个随机变量，对任意$x\in (-\infty,+\infty)$，令&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F(x) = P\{X\leq x\}&lt;/script&gt;

&lt;p&gt;则称$F(x)$时随机变量$X$的分布函数。&lt;/p&gt;

&lt;h3 id=&quot;分布函数的性质&quot;&gt;分布函数的性质&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;单调性&lt;/p&gt;

    &lt;p&gt;$F(x)$是单调不减函数，即当$x_1&amp;lt;x_2$时，有$F(x_1)\leq F(x_2)$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有界性&lt;/p&gt;

    &lt;p&gt;$0\leq F(x) \leq1 \quad (-\infty&amp;lt;x&amp;lt;+\infty)$，且$F(-\infty)=\lim\limits_{x\to -\infty} {F(x)}=0$，$F(+\infty)=\lim\limits_{x\to +\infty} {F(x)}=1$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;右连续性，即$F(x+0)=F(x)$，$\forall x\in R$&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;连续型随机变量&quot;&gt;连续型随机变量&lt;/h2&gt;

&lt;h3 id=&quot;连续型随机变量及其概率密度函数&quot;&gt;连续型随机变量及其概率密度函数&lt;/h3&gt;

&lt;p&gt;设随机变量$X$的分布函数$F(x)$，如果存在&lt;strong&gt;非负&lt;/strong&gt;函数$f(x)$，使得$\forall x \in (-\infty,+\infty)$，都有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F(x)=\int_{-\infty}^{x}f(t)d_t&lt;/script&gt;

&lt;p&gt;则称$X$为连续型随机变量，$f(x)$为$X$的&lt;strong&gt;概率密度函数&lt;/strong&gt;，简称概率密度或密度。&lt;/p&gt;

&lt;p&gt;相关性质：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$f(x)\geq 0,\quad -\infty&amp;lt;x&amp;lt;+\infty $&lt;/li&gt;
  &lt;li&gt;$\int_{-\infty}^{+\infty}f(x)=1$&lt;/li&gt;
  &lt;li&gt;对于$\forall x_1\leq x_2$，$P(x_1&amp;lt;X\leq x_2)$$=\int_{x_1}^{x_2}f(x)d_x = F(x_2)-F(x_1)$&lt;/li&gt;
  &lt;li&gt;若$f(x)$在$x$处连续，则$F^{‘}(x)=f(x)$&lt;/li&gt;
  &lt;li&gt;改变$f(x)$在个别处的值，不影响$F(x)$&lt;/li&gt;
  &lt;li&gt;$\forall x,P(X=x)=\int_x^xf(t)d_t=0$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通常提到离散型随机变量的概率分布指的是其分布律，连续型随机变量的概率分布指的是其概率密度。&lt;/p&gt;

&lt;h3 id=&quot;常见的连续型随机变量的分布&quot;&gt;常见的连续型随机变量的分布&lt;/h3&gt;

&lt;h4 id=&quot;均匀分布&quot;&gt;均匀分布&lt;/h4&gt;

&lt;p&gt;随机变量$X$的概率密度为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
f(x) = \left\{ \begin{array}{ll}
 \frac{1}{b-a}&amp; {a\leq x \leq b }\\
 0 &amp; \textrm{其他}
\end{array} \right. %]]&gt;&lt;/script&gt;

&lt;p&gt;则称$X$服从$[a，b]$上的均匀分布，记为$X \sim U[a,b]$.&lt;/p&gt;

&lt;h4 id=&quot;指数分布&quot;&gt;指数分布&lt;/h4&gt;

&lt;p&gt;随机变量$X$的概率密度为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
f(x) = \left\{ \begin{array}{}
 \lambda e^{-\lambda x}&amp; { x &gt;0 }\\
 0 &amp; {x\leq 0}
\end{array} \right. %]]&gt;&lt;/script&gt;

&lt;p&gt;则称$X$服均参数为$\lambda$的指数分布，记为$X \sim Exp(\lambda)$.&lt;/p&gt;

&lt;h4 id=&quot;正态分布&quot;&gt;正态分布&lt;/h4&gt;

&lt;p&gt;随机变量$X$的概率密度为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
f(x) = \frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}}, \quad -\infty&lt;x&lt;+\infty %]]&gt;&lt;/script&gt;

&lt;p&gt;其中，$\mu$、$\sigma$是常数，且$\sigma &amp;gt;0$，则称$X$服均参数为$\mu,\sigma$的正态分布，记为$X \sim N(\mu,\sigma^2)$.&lt;/p&gt;

&lt;p&gt;特别地，当$\mu = 0$，$\sigma = 1$时，称$X$服从标准正态分布，其概率密度函数和分布函数分别用$\varphi(x)$和$\Phi(x)$表示。有$\varphi(0)=0.5$和$\Phi(-x)=1-\Phi(-x)$。&lt;/p&gt;

&lt;p&gt;设$X \sim N(\mu,\sigma^2)$，则&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{aligned}
Y&amp;=kX+b \sim N(k\mu +b,k^2\sigma^2)
\\Y&amp;=\frac{x-\mu}{\sigma} \sim N(0,1)
\end{aligned} %]]&gt;&lt;/script&gt;

&lt;p&gt;由上式可知，正态随机变量的线性函数也服从正态分布，且非标准正态分布可以转化为标准正态分布计算概率密度的值。&lt;/p&gt;

&lt;h3 id=&quot;随机变量的函数的分布&quot;&gt;随机变量的函数的分布&lt;/h3&gt;

&lt;p&gt;当$X$是连续型随机变量时，求$Y=g(X)$的概率密度的一般方法是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;先求$Y$的分布函数$F_y(y)$的表达式&lt;/li&gt;
  &lt;li&gt;再对$F_y(y)$求导，得$Y$得概率密度函数&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Tan Dongliang</name><email>2016100532@mails.cust.edu.cn</email></author><category term="概率论与数理统计" /><summary type="html">随机变量 设$\Omega$为某一随机试验的样本空间，如果对于每一个样本点$\omega \in \Omega$，有一个实数$X(\omega)$与之对应，这样就定义了一个$\Omega$上的实值函数$X=X(\omega)$，称之为随机变量，简记为$X$。引入随机变量后，随机事件就可以通过随机变量的取值或取值范围来表示。随机变量可分为两种类型：离散型与非离散型随机变量。 通俗地讲，随机变量就是一个随机的数，它是对任何的“随机的东西”做的量化。随机的对象可以是任何东西–明天的天气可以是晴、阴、雨，扔硬币的结果可以是正面或者反面，这里本身都没有数字。但是我们要借助概率论来研究它们，而概率论是数学的一部分，要用到数学语言，那么总是写“明天是晴天的概率”就很不方便，于是我们可以把晴、阴、雨贴上标签，叫做0、1、2，然后把明天的天气状况用一个字母X来表示，于是“明天下雨”就变成了“X=2”。这样，这个原本没有数字的随机结果就变成了一个可能的取值为0、1、2的随机数，这就是随机变量。 链接：https://www.zhihu.com/question/307188808/answer/566226225 离散型随机变量 如果随机变量$X$的所有可能取值只有有限个或可列无穷多个，则称$X$为离散型随机变量。 0-1分布 若随机变量$X$的概率分布为 $X$ 0 1 $P$ $1-p$ $p$ 其中$0&amp;lt;p&amp;lt;1$，则称$X$服从参数为$p$的$0-1$分布或两点分布，记为$X\sim B(1,p)$。 二项分布 若随机变量$X$的概率分布为 其中$n$是正整数，$0&amp;lt;p&amp;lt;1$，则称$X$服从参数为$n,p$的二项分布，记为$X\sim B(n,p)$。 二项分布源于$n$重伯努利试验，若一次试验中事件$A$发生的概率为$p$，则$n$重伯努利试验中，事件$A$发生的次数$X$的概率分布为 泊松分布 若随机变量$X$的概率分布为 其中$\lambda &amp;gt;0$，则称$X$服从参数为$\lambda$的泊松分布，记为$X\sim P(\lambda)$。 可使用泊松分布近似二项分布 分布函数及其性质 分布函数的定义 设$X$是一个随机变量，对任意$x\in (-\infty,+\infty)$，令 则称$F(x)$时随机变量$X$的分布函数。 分布函数的性质 单调性 $F(x)$是单调不减函数，即当$x_1&amp;lt;x_2$时，有$F(x_1)\leq F(x_2)$ 有界性 $0\leq F(x) \leq1 \quad (-\infty&amp;lt;x&amp;lt;+\infty)$，且$F(-\infty)=\lim\limits_{x\to -\infty} {F(x)}=0$，$F(+\infty)=\lim\limits_{x\to +\infty} {F(x)}=1$ 右连续性，即$F(x+0)=F(x)$，$\forall x\in R$ 连续型随机变量 连续型随机变量及其概率密度函数 设随机变量$X$的分布函数$F(x)$，如果存在非负函数$f(x)$，使得$\forall x \in (-\infty,+\infty)$，都有 则称$X$为连续型随机变量，$f(x)$为$X$的概率密度函数，简称概率密度或密度。 相关性质： $f(x)\geq 0,\quad -\infty&amp;lt;x&amp;lt;+\infty $ $\int_{-\infty}^{+\infty}f(x)=1$ 对于$\forall x_1\leq x_2$，$P(x_1&amp;lt;X\leq x_2)$$=\int_{x_1}^{x_2}f(x)d_x = F(x_2)-F(x_1)$ 若$f(x)$在$x$处连续，则$F^{‘}(x)=f(x)$ 改变$f(x)$在个别处的值，不影响$F(x)$ $\forall x,P(X=x)=\int_x^xf(t)d_t=0$ 通常提到离散型随机变量的概率分布指的是其分布律，连续型随机变量的概率分布指的是其概率密度。 常见的连续型随机变量的分布 均匀分布 随机变量$X$的概率密度为 则称$X$服从$[a，b]$上的均匀分布，记为$X \sim U[a,b]$. 指数分布 随机变量$X$的概率密度为 则称$X$服均参数为$\lambda$的指数分布，记为$X \sim Exp(\lambda)$. 正态分布 随机变量$X$的概率密度为 其中，$\mu$、$\sigma$是常数，且$\sigma &amp;gt;0$，则称$X$服均参数为$\mu,\sigma$的正态分布，记为$X \sim N(\mu,\sigma^2)$. 特别地，当$\mu = 0$，$\sigma = 1$时，称$X$服从标准正态分布，其概率密度函数和分布函数分别用$\varphi(x)$和$\Phi(x)$表示。有$\varphi(0)=0.5$和$\Phi(-x)=1-\Phi(-x)$。 设$X \sim N(\mu,\sigma^2)$，则 由上式可知，正态随机变量的线性函数也服从正态分布，且非标准正态分布可以转化为标准正态分布计算概率密度的值。 随机变量的函数的分布 当$X$是连续型随机变量时，求$Y=g(X)$的概率密度的一般方法是： 先求$Y$的分布函数$F_y(y)$的表达式 再对$F_y(y)$求导，得$Y$得概率密度函数</summary></entry><entry><title type="html">随机事件与概率</title><link href="http://localhost:4000/2020/03/04/%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%A6%82%E7%8E%87.html" rel="alternate" type="text/html" title="随机事件与概率" /><published>2020-03-04T00:00:00+08:00</published><updated>2020-03-04T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/04/%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%A6%82%E7%8E%87</id><content type="html" xml:base="http://localhost:4000/2020/03/04/%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%A6%82%E7%8E%87.html">&lt;h2 id=&quot;事件之间的关系&quot;&gt;事件之间的关系&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;包含关系&lt;/p&gt;

    &lt;p&gt;如果事件$A$发生必然导致事件$B$发生，则称事件$A$包含于事件$B$，或称事件B包含事件A，记作$A\subset B$或$B\supset A$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;相等关系&lt;/p&gt;

    &lt;p&gt;如果两个事件$A$与$B$满足：$A\subset B$或$B\subset A$ ，则称事件A与B相等。这意味着事件$A$与$B$本质上是同一个事件，记作：$A=B$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;事件的和&lt;/p&gt;

    &lt;p&gt;两个事件$A$、$B$至少有一个发生，即“$A$发生或$B$发生”，这样的事件称为事件$A$、$B$的和，记作$A\cup B$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; 事件的积（交）&lt;/p&gt;

    &lt;p&gt;两个事件$A$、$B$同时发生，这样的事件称为$A$与$B$的积，记作$A\cap B$或$AB$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;互不相容事件  $AB=\oslash$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对立事件  $AB=\oslash$，且$A\cup B=\Omega$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;事件的差&lt;/p&gt;

    &lt;p&gt;$A$发生且$B$不发生，记作$A-B$&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;事件之间的关系使用集合符号来进行表示，但其数学含义与集合间的运算不同。比如$A\cap B$不能理解为两个集合的交集，而应该是两个事件同时发生。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;完备事件组&quot;&gt;完备事件组&lt;/h2&gt;

&lt;p&gt;若$n$个事件$A_1,…,A_n$中至少有一个发生，且两两互不相容，即$\cup_{i}^n A_i= \Omega$，且$A_i{\cap}A_j=\oslash$，则称事件$A_1,…,A_n$构成一个完备事件组。&lt;/p&gt;

&lt;h2 id=&quot;条件概率&quot;&gt;条件概率&lt;/h2&gt;

&lt;p&gt;事件$B$发生的条件下事件$A$发生的条件概率：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\P(A|B)=\frac{P(AB)}{P(B)}&lt;/script&gt;

&lt;p&gt;事件$A$发生的条件下事件$B$发生的条件概率：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\P(B|A)=\frac{P(AB)}{P(A)}&lt;/script&gt;

&lt;h2 id=&quot;全概率公式&quot;&gt;全概率公式&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;基本思想：&lt;/strong&gt;由已知简单事件的概率，推出未知复杂事件的概率。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;基本方法：&lt;/strong&gt;将复杂事件化为两两互不相容事件之和，再利用概率的可加性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;定义：&lt;/strong&gt;设$B$为随机试验$T$中的任一事件，事件$A_1,…,A_n$构成一完备事件组，即$\cup A_i= \Omega$，$A_i{\cap}A_j=\oslash(i\neq j)$，且$P(A_i)&amp;gt;0,i=1,2,…,n$，则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\P(B)=\sum_{i=1}^n{P(B|A_i)P(A_i)}&lt;/script&gt;

&lt;p&gt;上述公式称为全概率公式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;证明：&lt;/strong&gt;$B=B{\cap}{\Omega}=B{\cap}{(\cup_{i=1}^nA_i)}=\cup_i^n{(B\cap A_i)}$，由于$A_i{\cap}A_j=\oslash(i\neq j)$，所以$BA_i{\cap}BA_j=\oslash(i\neq j)$，即$BA_1,BA_2,…,BA_n$两两互不相容，根据概率的有限可加性与乘法公式得&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
P(B)&amp;=P(BA_1)+P(BA_2)+...+P(BA_n)
\\&amp; =\sum_{i=1}^nP(BA_i)
\\&amp; =\sum_{i=1}^nP(B|A_i)P(A_i)
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;我们可以将事件$B$视为“结果”，$A_1,A_2,…,A_n$则视为导致结果$B$发生的“原因”，称为$P(A_i)$为&lt;strong&gt;先验概率&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;贝叶斯bayes公式&quot;&gt;贝叶斯(Bayes)公式&lt;/h2&gt;

&lt;p&gt;在全概率公式中，将事件&lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;视为“结果”，事件&lt;script type=&quot;math/tex&quot;&gt;A_1,...,A_n&lt;/script&gt;视为导致结果&lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;发生的“原因”。有时我们还想要知道结果&lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt;发生到底主要由什么原因所引起，即需求$P({A_i}|{B})$，称之为&lt;strong&gt;后验概率&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;设$B$为一事件且$P(B)&amp;gt;0$，事件$A_1,…,A_n$构成一完备事件组，且$P(A_i)&amp;gt;0,i=1,2,…,n$，则有&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
\\P(A_i|B)&amp;=\frac{P(A_iB)}{P(B)}
\\&amp;=\frac{P(B|A_i)P(A_i)}{\sum_{i=1}^nP(B|A_i)P(A_i)}
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;上述公式称为贝叶斯公式。&lt;/p&gt;</content><author><name>Tan Dongliang</name><email>2016100532@mails.cust.edu.cn</email></author><category term="概率论与数理统计" /><summary type="html">事件之间的关系 包含关系 如果事件$A$发生必然导致事件$B$发生，则称事件$A$包含于事件$B$，或称事件B包含事件A，记作$A\subset B$或$B\supset A$ 相等关系 如果两个事件$A$与$B$满足：$A\subset B$或$B\subset A$ ，则称事件A与B相等。这意味着事件$A$与$B$本质上是同一个事件，记作：$A=B$ 事件的和 两个事件$A$、$B$至少有一个发生，即“$A$发生或$B$发生”，这样的事件称为事件$A$、$B$的和，记作$A\cup B$  事件的积（交） 两个事件$A$、$B$同时发生，这样的事件称为$A$与$B$的积，记作$A\cap B$或$AB$ 互不相容事件 $AB=\oslash$ 对立事件 $AB=\oslash$，且$A\cup B=\Omega$ 事件的差 $A$发生且$B$不发生，记作$A-B$ 事件之间的关系使用集合符号来进行表示，但其数学含义与集合间的运算不同。比如$A\cap B$不能理解为两个集合的交集，而应该是两个事件同时发生。 完备事件组 若$n$个事件$A_1,…,A_n$中至少有一个发生，且两两互不相容，即$\cup_{i}^n A_i= \Omega$，且$A_i{\cap}A_j=\oslash$，则称事件$A_1,…,A_n$构成一个完备事件组。 条件概率 事件$B$发生的条件下事件$A$发生的条件概率： 事件$A$发生的条件下事件$B$发生的条件概率： 全概率公式 基本思想：由已知简单事件的概率，推出未知复杂事件的概率。 基本方法：将复杂事件化为两两互不相容事件之和，再利用概率的可加性。 定义：设$B$为随机试验$T$中的任一事件，事件$A_1,…,A_n$构成一完备事件组，即$\cup A_i= \Omega$，$A_i{\cap}A_j=\oslash(i\neq j)$，且$P(A_i)&amp;gt;0,i=1,2,…,n$，则有 上述公式称为全概率公式。 证明：$B=B{\cap}{\Omega}=B{\cap}{(\cup_{i=1}^nA_i)}=\cup_i^n{(B\cap A_i)}$，由于$A_i{\cap}A_j=\oslash(i\neq j)$，所以$BA_i{\cap}BA_j=\oslash(i\neq j)$，即$BA_1,BA_2,…,BA_n$两两互不相容，根据概率的有限可加性与乘法公式得 我们可以将事件$B$视为“结果”，$A_1,A_2,…,A_n$则视为导致结果$B$发生的“原因”，称为$P(A_i)$为先验概率。 贝叶斯(Bayes)公式 在全概率公式中，将事件视为“结果”，事件视为导致结果发生的“原因”。有时我们还想要知道结果发生到底主要由什么原因所引起，即需求$P({A_i}|{B})$，称之为后验概率。 设$B$为一事件且$P(B)&amp;gt;0$，事件$A_1,…,A_n$构成一完备事件组，且$P(A_i)&amp;gt;0,i=1,2,…,n$，则有 上述公式称为贝叶斯公式。</summary></entry></feed>